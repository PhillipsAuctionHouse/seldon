@use 'sass:math';
@use '#scss/allPartials' as *;

@mixin gridItemColumnSpan($span: 1, $total-cols: 12) {
  grid-column: auto / span $span;

  &-align-right {
    grid-column-end: $total-cols + 1;
    justify-self: end;
  }

  &-align-center {
    grid-column: math.ceil(math.div($total-cols + 1 - $span, 2)) / span #{$span};
  }
}

.#{$px}-grid-item {
  justify-self: center;
  width: 100%;

  @for $i from 1 through 2 {
    &--span-xs-#{$i} {
      @include gridItemColumnSpan($i, 2);
    }
  }

  @for $i from 1 through 6 {
    &--start-xs-#{$i} {
      grid-column-start: #{$i};
    }
  }

  @include media($size-sm) {
    @for $i from 1 through 2 {
      &--span-sm-#{$i} {
        @include gridItemColumnSpan($i, 2);
      }
    }

    @for $i from 1 through 6 {
      &--start-sm-#{$i} {
        grid-column-start: #{$i};
      }
    }
  }

  @include media($size-md) {
    @for $i from 1 through 6 {
      &--span-md-#{$i} {
        @include gridItemColumnSpan($i, 6);
      }
    }

    @for $i from 1 through 6 {
      &--start-md-#{$i} {
        grid-column-start: #{$i};
      }
    }
  }

  @include media($size-lg) {
    @for $i from 1 through 12 {
      &--span-lg-#{$i} {
        @include gridItemColumnSpan($i, 12);
      }
    }

    @for $i from 1 through 12 {
      &--start-lg-#{$i} {
        grid-column-start: #{$i};
      }
    }
  }

  @include media($size-xl) {
    @for $i from 1 through 12 {
      &--span-xl-#{$i} {
        @include gridItemColumnSpan($i, 12);
      }
    }

    @for $i from 1 through 12 {
      &--start-xl-#{$i} {
        grid-column-start: #{$i};
      }
    }
  }
}
