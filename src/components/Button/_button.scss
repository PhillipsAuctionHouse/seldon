@use '#scss/allPartials' as *;

.#{$px}-button {
  // TODO: We really to remove this and instead use the Text component
  @include text($labelSmall);

  align-items: center;
  background-color: $pure-black;
  border: 1px solid transparent;
  border-radius: 6.25rem;
  color: $pure-white;
  cursor: pointer;
  display: inline-flex;
  font-variation-settings: 'wght' 600;
  gap: $margin-xsm;
  justify-content: center;
  padding: $padding-sm $padding-sm;
  position: relative;
  transition:
    color 0.25s,
    background-color 0.25s;

  @media (min-width: $breakpoint-md) and (max-width: $breakpoint-xl) {
    font-size: 1rem; // 16px  TODO: temporary override we need to revisit this with the button redesigns that are coming soon
  }

  svg {
    fill: $pure-white;
    height: calc($font-size-label-small * 1.3);
    width: calc($font-size-label-small * 1.3);

    @include media($breakpoint-md) {
      height: calc($font-size-label-small * 1.4);
      width: calc($font-size-label-small * 1.4);
    }

    path {
      fill: $pure-white;
      transition: 0.25s;
    }
  }

  &:hover {
    background-color: $button-hover;

    svg {
      fill: $pure-white;
    }
  }

  &:focus-visible {
    outline: 0.5px solid $pure-white;
    outline-offset: -4.5px;

    svg {
      fill: $pure-white;
    }
  }

  &--link {
    background-color: transparent;
    border: 0;
    color: $pure-black;
    height: auto;
    padding: 0;
    text-decoration: underline;

    &:hover {
      background-color: transparent;
      color: $pure-black;
    }
  }

  &--secondary,
  &--ghost {
    background-color: $pure-white;
    border: 1px solid $pure-black;
    color: $pure-black;
    transition: border 0.3s ease-out;
    z-index: 0;

    &::before {
      border-radius: 100px;
      box-sizing: border-box;
      content: '';
      display: inline-block;
      height: 0;
      left: 50%;
      position: absolute;
      top: 50%;
      transition: all 0.25s ease;
      width: 0;
      z-index: -2;
    }

    &:focus-visible {
      background-color: $pure-white;
      outline-color: $soft-black;
    }

    svg {
      fill: $pure-black;

      path {
        fill: $pure-black;
      }
    }
  }

  &--secondary {
    transition: box-shadow 0.25s;

    &:hover {
      background-color: transparent;
      box-shadow: 0 0 0 1px rgba($pure-black, 1);
    }
  }

  &--ghost {
    border-color: transparent;

    &:hover {
      background-color: transparent;
      border: 1px solid transparent;
      color: $pure-white;

      svg {
        fill: $pure-white;

        path {
          fill: $pure-white;
        }
      }

      &::before {
        background: $button-hover;
        height: 100%;
        left: 0;
        top: 0;
        width: 100%;
      }
    }
  }

  &--tertiary {
    background-color: transparent;
    border: 0;
    color: $pure-black;
    padding: 0 $spacing-micro;

    svg {
      fill: $pure-black;

      path {
        fill: $pure-black;
      }
    }

    &:hover {
      background-color: transparent;
      color: $button-hover;

      svg {
        fill: $button-hover;

        path {
          fill: $button-hover;
        }
      }
    }

    &:focus-visible {
      background-color: $pure-white;
      border-radius: 0;
      outline-color: $soft-black;
      outline-offset: 4.5px;
      padding: 0 4px;
    }
  }

  &:disabled {
    background-color: $white-100;
    border: 1px solid $light-gray;
    color: $light-gray;
    cursor: default;

    &:hover {
      &::before {
        all: unset;
      }
    }

    svg {
      fill: $light-gray;

      path {
        fill: $light-gray;
      }
    }
  }

  &--ghost:disabled,
  &--tertiary:disabled {
    border-color: transparent;
  }

  &--link:disabled {
    border: 0;
  }

  * {
    margin: 0;
  }
}

.#{$px}-button__group {
  display: flex;
  gap: 0.25rem;
  justify-content: center;
  width: 100%;
}
