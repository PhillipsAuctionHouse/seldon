@use './vars' as *;

@mixin headerText {
  @include DistinctDisplay;

  color: $primary-black;
  font-variation-settings: 'wght' 400;
}

@mixin titleText {
  @include DistinctDisplay;
}

@mixin bodyText {
  color: $soft-black;
}

@mixin DistinctItalic {
  font-family: Distinct, sans-serif;
  font-style: italic;
}

@mixin DistinctDisplay {
  font-family: DistinctDisplay, sans-serif;
}

@mixin DistinctDisplayItalic {
  font-family: DistinctDisplay, sans-serif;
  font-style: italic;
}

@mixin Montserrat {
  font-family: Montserrat, sans-serif;
}

@mixin DistinctText {
  font-family: Distinct, sans-serif;
}

@mixin underline($offset: $spacing-micro, $thickness: 1px, $color: $pure-black) {
  text-decoration: underline;
  text-decoration-thickness: $thickness;
  text-underline-offset: $offset;
}

@mixin hText(
  $size: var(--font-size-xl),
  $color: $pure-black,
  $transform-style: capitalize,
  $text-decoration: unset,
  $font-style: unset,
  $line-height: calc($size + var(--font-size-step))
) {
  @include DistinctDisplay;

  // UI-QUESTION: should font be DistinctText? cause names are different but DistinctDisplay looks correct

  color: $color;
  font-size: $size;
  font-style: $font-style;
  font-variation-settings: 'wght' 400;
  line-height: $line-height;
  text-decoration: $text-decoration;
  text-transform: $transform-style;
}

@mixin pText(
  $size: $body-size1,
  $color: $pure-black,
  $line-height: calc($size + var(--font-size-step)),
  $font-weight: 400
) {
  @include Montserrat;

  color: $color;
  font-size: $size;
  font-variation-settings: 'wght' $font-weight;
  line-height: $line-height;
}

@mixin label(
  $size: var(--font-size-md),
  $color: $pure-black,
  $line-height: calc(var(--font-size-md) + var(--font-size-step)),
  $font-weight: 400
) {
  @include Montserrat;

  color: $color;
  font-size: $size;
  font-variation-settings: 'wght' $font-weight;
  line-height: $line-height;
}

@mixin labelText($label) {
  @include Montserrat;

  font-variation-settings: 'wght' 600;

  @if $label == 'link' {
    font-size: $link-label-size;
    letter-spacing: 1px;
    line-height: $link-label-line-height;
    text-transform: capitalize;
  }

  @if $label == 'button' {
    font-size: $button-label-size;
    letter-spacing: 0;
    line-height: $button-label-line-height;
    text-transform: capitalize;
  }

  @if $label == 'email' {
    font-size: $email-label-size;
    letter-spacing: 0.0625rem;
    line-height: 1.25;
    text-transform: lowercase;
  }

  @if $label == 'label' {
    font-size: $text-label-size;
    font-variation-settings: 'wght' 500;
    letter-spacing: 0.0625rem;
    line-height: 1.25;
  }

  @if $label == 'badge' {
    font-size: $badge-label-size;
    font-variation-settings: 'wght' 500;
    letter-spacing: 0;
    line-height: $badge-label-line-height;
    text-transform: uppercase;
  }
}

@mixin text($token) {
  // Labels
  @if $token == 'labelLg' {
    @include label($size: var(--font-size-md));
  }

  @if $token == 'labelLgBold' {
    @include label($size: var(--font-size-md), $font-weight: 600);
  }

  @if $token == 'labelMd' {
    @include label($size: var(--font-size-sm), $font-weight: 400);
  }

  @if $token == 'labelMdBold' {
    @include label($size: var(--font-size-sm), $font-weight: 600);
  }

  @if $token == 'labelSm' {
    @include label($size: var(--font-size-xsm), $font-weight: 400);
  }

  @if $token == 'labelSmBold' {
    @include label($size: var(--font-size-xsm), $font-weight: 600);
  }

  @if $token == 'button' {
    @include label($size: var(--font-size-sm), $font-weight: 600);
  }

  @if $token == 'link' {
    @include labelText($link);
  }

  @if $token == 'email' {
    @include labelText($email);
  }

  @if $token == 'label' {
    @include labelText($label);
  }

  @if $token == 'badge' {
    @include labelText($badge);
  }

  @if $token == 'bodyLg' {
    @include pText(var(--font-size-md));
  }

  @if $token == 'bodyMd' {
    @include pText(var(--font-size-sm));
  }

  @if $token == 'bodySm' {
    @include pText(var(--font-size-xsm));
  }

  @if $token == 'bodyLgBold' {
    @include pText(var(--font-size-md), $font-weight: 600);
  }

  @if $token == 'bodyMdBold' {
    @include pText(var(--font-size-sm), $font-weight: 600);
  }

  @if $token == 'bodySmBold' {
    @include pText(var(--font-size-xsm), $font-weight: 600);
  }

  // Headings
  @if $token == 'blockquote' {
    @include hText(
      var(--font-size-xl),
      $color: $primary-black,
      $transform-style: initial,
      $line-height: var(--font-size-xxl)
    );
  }

  @if $token == 'heading1' {
    @include hText(var(--font-size-xl));
  }

  @if $token == 'heading2' {
    @include hText(var(--font-size-lg));
  }

  @if $token == 'heading3' {
    @include hText(var(--font-size-md));
  }

  @if $token == 'heading3Italic' {
    @include hText(var(--font-size-md), $font-style: italic);
  }

  @if $token == 'heading4' {
    @include hText(var(--font-size-sm));
  }

  @if $token == 'heading4Italic' {
    @include hText(var(--font-size-sm), $font-style: italic);
  }

  @if $token == 'heading5' {
    @include hText(var(--font-size-xs));
  }

  @if $token == 'title1' {
    @include hText(var(--font-size-xl), $transform-style: uppercase);
  }

  // the title2 token skips heading 2 because it's the same size currently as heading1
  @if $token == 'title2' {
    @include hText(var(--font-size-lg), $transform-style: uppercase);
  }

  @if $token == 'title3' {
    @include hText(var(--font-size-md), $transform-style: uppercase);
  }

  @if $token == 'title4' {
    @include hText(var(--font-size-sm), $transform-style: uppercase);
  }

  // Body
  @if $token == 'body1' {
    @include pText($body-size1, $line-height: $body-line-height-size1);
  }

  @if $token == 'body2' {
    @include pText($body-size2, $line-height: $body-line-height-size2);
  }

  @if $token == 'body3' {
    @include pText($body-size3, $line-height: $body-line-height-size3);
  }

  // String
  @if $token == 'string1' {
    @include pText($string-size1, $line-height: $string-line-height-size1);
  }

  @if $token == 'string2' {
    @include pText($string-size2, $line-height: $string-line-height-size2);
  }

  @if $token == 'string3' {
    @include pText($string-size3, $line-height: $string-line-height-size3);
  }

  // SNW
  @if $token == 'snwHeaderLink' {
    @include DistinctDisplay;

    font-size: $snw-header-link-size;
    font-variation-settings: 'wght' 400;
    letter-spacing: 1px;
    line-height: $snw-header-link-line-height;
    text-transform: uppercase;
  }

  @if $token == 'snwFlyoutLink' {
    @include Montserrat;

    font-size: $snw-flyout-link-size;
    font-variation-settings: 'wght' 400;
    letter-spacing: 1px;
    line-height: $snw-flyout-link-line-height;
    text-transform: capitalize;
  }

  @if $token == 'snwHeadingHero1' {
    @include hText($snw-heading-hero-size1, $line-height: $snw-heading-hero-line-height1, $transform-style: uppercase);

    text-align: center;
  }

  @if $token == 'snwHeadingHero2' {
    @include hText($snw-heading-hero-size2, $line-height: $snw-heading-hero-line-height2, $transform-style: uppercase);

    text-align: center;
  }
}
